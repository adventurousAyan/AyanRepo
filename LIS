using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LongestSubSequence
{
    public class LongestIncSubs
    {
        public static void Main(String[] args)
        {
            Console.WriteLine("Please enter input string");
            var userInput = Console.ReadLine();
            var arr = userInput.Split(' ').Select(int.Parse).ToArray();            
            LongestIncSubs lcs = new LongestIncSubs();
            Console.WriteLine("Longest increasing subsequence is - {0}", string.Join(" ", lcs.getLISArr(arr).Select(i => i.ToString()).ToArray()));
            Console.ReadLine();
            
        }

        public int[] getLISArr(int[] arr)
        {
            //Base case
            if (arr == null || arr.Length <= 1)
            {
                return arr;
            }

            int[] dp = new int[arr.Length];
            int max = 0;

            for (int i = 1; i < arr.Length; i++)
            {
                for (int j = 0; j < i; j++)
                {
                    if (arr[i] > arr[j])
                    {
                        dp[i] = Math.Max(dp[i], dp[j] + 1);
                    }
                }

                if (dp[i] > max)
                {
                    max = dp[i];
                }
            }

            int[] res = new int[max + 1];

            int curIndex = 0;
            for (int i = 0; i < dp.Length; i++)
            {
                if (dp[i] >= curIndex)
                {
                    curIndex = dp[i];
                    res[curIndex] = arr[i];
                }
            }

            return res;
        }
    }
}
